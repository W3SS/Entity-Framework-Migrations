*************************************************************************************************
						Apartir de um projeto vazio do Visual Studio
*************************************************************************************************
1-Criar um projeto Console
2-Criar uma classe POCO produto.cs
3-Criar Referencia ao EF no Package Manager com o comando (Install-Package entityframework)
4-Criar uma classe para utilização do EF, DBProduto
5-Configurações da Base em app.config
6-Criar uma classe de metodos do produto, ProdutoAplicacao.cs
7-Criar um arquivo de conf. do Migration com o comando (Enable-Migrations) 
8-Criar uma imagem inicial do BD com o comando (Add-Migration "nome")
9-Atualizar BD com o comando (Update-Database -Verbose) 
10-Reverter BD ate o estado inicial com o comando (Update-Database -TargetMigration:nome) // ocorreram erros ate a remocao das dependencias no codigo

----Relacionamento 1 para N
11-Exclusão da base e geração automática com o comando (Update-Database -force) 
12-Criar uma classe POCO categoria.cs 
13-Alteracao da classe produto.cs e DBProduto para vincular clase categoria.cs
14-6-Criar uma classe de metodos da categoria, CategoriaAplicacao.cs
15-Alteracao da classe ProdutoAplicao.cs para vincular este a categoria

----Relacionamento N to N
16-Exclusão da base e geração automática com o comando (Update-Database -force) 
17-Criar uma classe POCO ListaDeproduto.cs
18-Alteracao da classe produto.cs e DBProduto para vincular classe ListaDeProduto.cs
19-Criar uma imagem do BD com o comando (Add-Migration nome)
20-Atualizar BD com o comando (Update-Database) 
21-Criar uma classe de metodos do ListaDeProdutos, ListaDeProdutoAplicacao.cs

----Refatoração
22- Criar 3 projetos e remover do proj inicial as classes para seus respectivos projetos
23- Remover pasta Migration
24- Criar Referencia ao EF no projeto Repositorio e Aplicacao com o Package Manager usando o comando (Install-Package entityframework)
25- Ajustar Namespaces e referencias
26- Criar um arquivo de conf. do Migration no projeo Repositorio com o comando (Enable-Migrations) 
27- Criar uma imagem inicial do BD com o comando (Add-Migration "nome")
28- Atualizar BD com o comando (Update-Database -Verbose) 
29- Reescrever Program.cs


----Eduardo Pires (CodeFirst)
1- Criar uma base de dados Legacy com um modelo ruim
2- Instalar o plugin Entity Framework Power Tools Beta 4 (https://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d)
// Como o plugin não é suportado para VS2015, incluir no seu arquivo extension.vsixmanifest a versao 14 (referente ao VS2015)
// Plugin opcional que ajuda na leitura de scripts (Devart T4 Editor for Visual Studio)
3- Seleciona o projeto > Entity > Reverse Engenieer Code First para criar a estrutura (Instalar o EF pode ser necessario)
4- Refatorar nomes das classes
5- Criar um arquivo de conf. do Migration no projeo Repositorio com o comando (Enable-Migrations) 
//Antes deve ser removido a palavra name do metodo public ProjName() : base(name:"nomedabase") {}
6- Atualizar em Migrations>Configuration.cs de AutomaticMigrationsEnabled = false; para AutomaticMigrationsEnabled = true;
7- Alterar informações em legacydbcontext.cs para que ao atualizar a BD, seja utilizado o padrao que queremos (ex:varchar ao invez de nvarchar)
/-Criar uma imagem do BD sem informações de Up ou Down com o comando (Add-Migration Initial -IgnoreChanges)
8- Atualizar BD com o comando (Update-Database -Verbose) 



*************************************************************************************************
							Comandos do package Manager Console
*************************************************************************************************
Install-Package entityframework
Instala as referencias do Entity Framework ao projeto

Enable-Migrations 
Habilita e cria o migratin ao projeto

Add-Migration nome
Cria uma classe com as ultimas atualizações feitas na estrutura de dados
onde o parametro nome, acaba por ser a referencia que pretenda dar ao arquivo

Add-Migration Initial -IgnoreChanges
Cria uma classe com sem atualizações de Up e Down na estrutura de dados
onde o parametro Initial, acaba por ser a referencia que pretenda dar ao arquivo (usado qdo é o primeiro a ser criado)

Update-Database -Verbose
Atualiza as informações do Migrate no Banco de dados
comando verbose serve para mostrar um passo a passo na console

Update-Database -Script -SourceMigrtion$InitialDatabase -TargetMigration:nome
Cria um script com todas as alteracoes desde o arq. initial ate o arquivo do target
onde o parametro nome, acaba por ser o nome referencia do ultimo arquivo

Update-Database -TargetMigration:nome
Atualiza base de dados ate a configuração existente no arquivo do target migration